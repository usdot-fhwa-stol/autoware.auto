name: CI
on:
  push:
    branches:
      - develop
      - feature/add_gha
      - master
      - "release/*"
  pull_request:
    types: [opened, synchronize, reopened]
  workflow_dispatch:  

jobs:
  determine_docker_org_and_tag:
    runs-on: ubuntu-latest
    outputs:
      docker_organization: ${{ steps.docker-org-and-tag.outputs.docker_organization }}
      docker_image_tag: ${{ steps.docker-org-and-tag.outputs.docker_image_tag }}-humble
    steps:
      - id: docker-org-and-tag
        uses: usdot-fhwa-stol/actions/docker-org-and-tag@main

  build:
    needs: determine_docker_org_and_tag
    defaults:
      run:
        shell: bash
        working-directory: "/opt/carma/"
    runs-on: ubuntu-latest-8-cores
    container:
      image: usdotfhwastoldev/carma-base:develop-humble
      env:
        INIT_ENV: "/home/carma/.base-image/init-env.sh"
        ROS_2_ENV: "/opt/ros/humble/setup.bash"
        TERM: xterm
      options: "--user root"
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          path: src/autoware.auto

      - name: Move source code
        run: |
          mkdir -p /opt/carma/src
          mv $GITHUB_WORKSPACE/src/autoware.auto /opt/carma/src/autoware.auto

      - name: Determine base branch
        id: determine-base-branch
        run: |
          if [[ "$GITHUB_EVENT_NAME" == "pull_request" ]]; then
            echo git_branch="$GITHUB_BASE_REF" >> $GITHUB_OUTPUT
          else
            echo git_branch="$GITHUB_REF_NAME" >> $GITHUB_OUTPUT
          fi

      - name: Checkout dependencies
        run: |
          source "$INIT_ENV"
          source "$ROS_2_ENV"
          ./src/autoware.auto/docker/checkout.bash -r /opt/carma/src -b develop

      - name: Build
        run: |
          source "$INIT_ENV"
          source "$ROS_2_ENV"
          export AUTOWARE_COMPILE_WITH_CUDA=1
          PACKAGES=$(awk '{print $1}' ./src/autoware.auto/docker/autoware-auto-packages.txt | sed 's/#.*//' | tr -d '\r' | xargs -n1 | sort -u | tr '\n' ' ')
          export PACKAGES
          sed -i '/colcon build/ s/$/ --parallel-workers 4 --packages-up-to $PACKAGES /' /home/carma/.ci-image/engineering_tools/code_coverage/make_with_coverage.bash
          make_with_coverage.bash -m -e /opt/carma/ -o ./coverage_reports/gcov
      - name: Run C++ Tests
        run: |
          source "$INIT_ENV"
          source "$ROS_2_ENV"
          export AUTOWARE_COMPILE_WITH_CUDA=1
          export PACKAGES=$(awk '{print $1}' ./src/autoware.auto/docker/autoware-auto-packages.txt | sed 's/#.*//' | tr -d '\r' | xargs -n1 | sort -u | tr '\n' ' ')
          sed -i '/colcon test/ s|$| --parallel-workers 4 --event-handlers console_cohesion+ --packages-select $PACKAGES --ctest-args --output-on-failure|' /home/carma/.ci-image/engineering_tools/code_coverage/make_with_coverage.bash
          make_with_coverage.bash -t -e /opt/carma/ -o ./coverage_reports/gcov
          colcon test-result --all --verbose
      - name: Run SonarScanner
        uses: usdot-fhwa-stol/actions/sonar-scanner@main
        with:
          sonar-token: ${{ secrets.SONAR_TOKEN }}
          working-dir: "/opt/carma/src/autoware.auto"
